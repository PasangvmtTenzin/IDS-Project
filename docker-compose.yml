version: '3.8'

services:
  dns: # BIND9 DNS Server
    build:
      context: ./configs/dns
      dockerfile: Dockerfile
    container_name: ids-bind-dns
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./logs/bind:/var/log/bind
    networks:
      ids_net:
        ipv4_address: 172.20.0.2
    cap_add:
      - SYS_NICE
    restart: unless-stopped

  webserver: # Nginx reverse proxy
    build:
      context: .
      dockerfile: Dockerfiles/webserver.Dockerfile
    container_name: ids-nginx
    ports:
      - "8080:80"
    volumes:
      - ./configs/webserver/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      ids_net:
        ipv4_address: 172.20.0.5
    dns:
      - 172.20.0.2
    dns_search: ids.local # <--- CHANGED
    depends_on:
      app:
        condition: service_started
      dns:
        condition: service_started
    restart: unless-stopped

  app: # Our Flask application server
    build:
      context: .
      dockerfile: Dockerfiles/app.Dockerfile
    container_name: ids-flask-app
    volumes:
      - ./website:/app
    networks:
      ids_net:
        ipv4_address: 172.20.0.4
    dns:
      - 172.20.0.2
    dns_search: ids.local # <--- CHANGED
    depends_on:
      db:
        condition: service_healthy
      dns:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://store_user:strongpassword@db.ids.local:5432/cloth_store_db # <--- CHANGED
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - FLASK_SECRET_KEY=this_is_a_very_insecure_secret_key_for_ids_demo
    restart: unless-stopped

  db: # PostgreSQL database server
    image: postgres:15-alpine
    container_name: ids-postgres-db
    environment:
      - POSTGRES_DB=cloth_store_db
      - POSTGRES_USER=store_user
      - POSTGRES_PASSWORD=strongpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      ids_net:
        ipv4_address: 172.20.0.3
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U store_user -d cloth_store_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ids: # Suricata
    build:
      context: .
      dockerfile: Dockerfiles/ids.Dockerfile
    container_name: ids-suricata
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    volumes:
      - ./logs/suricata:/var/log/suricata # Corrected logs path
      - ./configs/ids:/etc/suricata:ro
    networks:
      ids_net:
        ipv4_address: 172.20.0.6
    dns:
      - 172.20.0.2
    dns_search: ids.local # <--- CHANGED
    command: suricata -c /etc/suricata/suricata.yaml -i eth0 --user=suricata --group=suricata
    depends_on:
      webserver:
        condition: service_started
      dns:
        condition: service_started
    restart: unless-stopped

  attacker:
    build:
      context: .
      dockerfile: Dockerfiles/attacker.Dockerfile
    container_name: ids-attacker
    volumes:
      - ./attacks:/attacks
    networks:
      ids_net:
        ipv4_address: 172.20.0.7
    dns:
      - 172.20.0.2
    dns_search: ids.local # <--- CHANGED
    tty: true
    stdin_open: true
    depends_on:
      webserver:
        condition: service_started
      dns:
        condition: service_started

networks:
  ids_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data: